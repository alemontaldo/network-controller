# --------- Queries and Mutation

type Query {
    allDevicesSorted: [Device!]!
    deviceByMac(mac: MacAddress): Device
    fullTopology: Device
    subtree(mac: MacAddress): Device
}

type Mutation {
    addDevice(input: DeviceInput!): AddDeviceResult!
}

# --------- Domain types

scalar MacAddress

enum DeviceType {
    GATEWAY
    SWITCH
    ACCESS_POINT
}

interface Device {
    mac: MacAddress!
    uplinkMac: MacAddress
    deviceType: DeviceType!
    downlinkDevices: [Device!]!
}

type Gateway implements Device {
    mac: MacAddress!
    uplinkMac: MacAddress
    deviceType: DeviceType!
    downlinkDevices: [Device!]!
}

type Switch implements Device {
    mac: MacAddress!
    uplinkMac: MacAddress
    deviceType: DeviceType!
    downlinkDevices: [Device!]!
}

type AccessPoint implements Device {
    mac: MacAddress!
    uplinkMac: MacAddress
    deviceType: DeviceType!
    downlinkDevices: [Device!]!
}

# --------- Mutation Input types

input DeviceInput {
    mac: MacAddress!
    uplinkMac: MacAddress
    deviceType: DeviceType!
}

# --------- Error types

interface Error {
    message: String!
}

type ValidationError implements Error {
    message: String!
}

type ServerError implements Error {
    message: String!
    errorCode: String
}

union AddDeviceResult = Gateway | Switch | AccessPoint | ValidationError | ServerError
